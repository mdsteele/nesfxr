# NES memory layout.  See https://wiki.nesdev.org/w/index.php/CPU_memory_map
# and https://wiki.nesdev.org/w/index.php/INES.
MEMORY {
  ZP:  start = $00,    size = $0100, type = rw, file = "";
  OAM: start = $0200,  size = $0100, type = rw, file = "";
  BSS: start = $0300,  size = $0500, type = rw, file = "";
  # The iNES ROM file header:
  HDR: start = $0000,  size = $0010, type = ro, file = %O, fill = yes;
  # Program data:
  PRG: start = $8000,  size = $8000, type = ro, file = %O, fill = yes;
  # Character (graphics) data:
  CHR: start = $0000,  size = $2000, type = ro, file = %O, fill = yes;
}

# Segments for this particular NES ROM.
SEGMENTS {
  # We start the ZEROPAGE segment at $08 so as to reserve the first eight bytes
  # of the zero page for the temporary variables defined in macros.inc.
  ZEROPAGE: load = ZP,  type = zp,  start = $08;
  OAM:      load = OAM, type = bss, align = $100;
  BSS:      load = BSS, type = bss;
  HEADER:   load = HDR, type = ro;
  CODE:     load = PRG, type = ro,  start = $8000;
  RODATA:   load = PRG, type = ro;
  # Interrupt vector:
  VECTOR:   load = PRG, type = ro,  start = $FFFA;
  # Character (graphics) data:
  CHR:      load = CHR, type = ro;
}
